================
ABI EIT Analysis
================
ABI EIT Analysis is a package that provides analysis tools for EIT data generated by the ABI EIT systems. It also provides three apps that each automate a workflow. This documentation will cover the usage of these apps, along with explanations of their underlying workflows.


Dependencies
============
**ABI pyEIT**

ABI pyEIT is the ABI version of the open-source pyEIT library. It provides additional capabilities which are required by ABI EIT Analysis. This can be downloaded from the `Github repo`_.
Clone the repository:

.. code-block:: console

    $ git clone git://github.com/ABI-EIT/pyEIT

And install it with:

.. code-block:: console

    $ python setup.py install

Analysis Apps
=================
process_eit_data
-----------------
process_eit_data is a script used to process a series of EIT frames. It runs in two main steps:

1) Solve each EIT frame in the input data
2) Attempt to boost the signal by averaging the data over the principle frequency. (This step assumes a human subject with a periodic breathing pattern.)

The output is an EIT image for each step, each representing the highest contrast frame.

The required file format is the format output by the ABI EIT data acquisition app. See the :code:`Analysis_Scripts/Example Data/process_eit_data` directory for example data files.

To begin, simply run the script. It will prompt for a data file. If this is the first time the script has been run, it will create a file with the default settings in :code:`./configuration/process_eit.json`. The script will then process the datafile and display the results.

The pipeline for process_eit_data is as follows:

- Read input data
- Initialize EIT object
- Solve all data frames
- Estimate volume based on area of reconstruction images
- Run a fourier transform and identify the highest power frequency
- Break the data into sections of the identified frequency's period and average them together
- Solve the averaged frames
- Estimate volume of the averaged reconstruction images
- Create plots and display

In order to configure the analysis settings, make changes to the :code:`./configuration/process_eit.json` file. See `Analysis Configuration`_ for a description of how to configure the settings.

analyse_single_trial
--------------------
analyse_single_trial is a script used to analyse the results of a trial based on our EIT + Venturi Spirometry test procedure.

See the :code:`Analysis_Scripts/Example Data/analyse_single_trial` directory for example data files.

analyse_multiple
-----------------
analyse_multiple is a script used to analyse multiple datasets and configurations from our EIT + Venturi Spirometry test protocol.
processed data is saved in a pickle.

See the :code:`Analysis_Scripts/Example Data/analyse_multiple` directory for example data files.

Analysis Configuration
======================
The ABI EIT Analysis Apps use configuration files to specify their analysis settings.

Description of Settings
-----------------------
Below is a description of the settings available for use with abi_eit_analysis, along with a list of the possible options.

.. code-block:: json

    "background_type": "max_magnitude",
    "initial_data_directory": "",
    "eit_configuration": {
        "chest_and_spine_ratio": 2,
        "dist": 3,
        "image_threshold_proportion": 0.15,
        "lamb": 0.4,
        "method": "kotre",
        "electrode_placement": "equal_spacing",
        "n_electrodes": 16,
        "p": 0.5,
        "starting_angle": 0,
        "counter_clockwise": true,
        "mask_filename": null
    },
    "linearity": {
        "analysis_max": -1,
        "normalize_volume": "VC"
    }

.. code-block::

    "background_type" ∈ {"max_magnitude", "file"}
    "electrode_placement" ∈ {"equal_spacing", "lidar"}
    "normalize_volume" ∈ {"VC", null}

Working Directory Protocol
--------------------------
abi_eit_analysis provides a protocol to specify a different working directory for files in the configuration file.

%key%_wd: "data_directory" sets the working directory for %key% to be that of the selected data directory

Base/Modifier Protocol
----------------------
abi_eit_analysis provides a protocol for building a set of different configurations by specifiying a base configuration plus a set of modifiers.

.. code-block:: json

    "base_config": {"dict of base configuration"},
    "config_modifiers": ["list of modifier dicts with
                         each key modifying one in the base"]


Credits
=======
* Development Lead: Andrew Creegan <andrew.s.creegan@gmail.com>

.. _Github repo: https://github.com/ABI-EIT/pyEIT